{"ast":null,"code":"import _classCallCheck from\"/Users/effiphil/Desktop/entertainment-web-app-full/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/effiphil/Desktop/entertainment-web-app-full/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var MainApi=/*#__PURE__*/function(){/** constructor of MainApi class.\n   * @param  baseUrl - the URL to make the request to.\n   */function MainApi(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,MainApi);this._baseUrl=baseUrl;this._headers=headers;}_createClass(MainApi,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"Error: \".concat(res.status));}},{key:\"updateToken\",value:function updateToken(token){this._headers.authorization=\"Bearer \".concat(token);}},{key:\"register\",value:function register(email,password){var _this=this;return fetch(\"\".concat(this._baseUrl,\"/signup\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({email:email,password:password})}).then(function(res){return _this._checkResponse(res);});}},{key:\"login\",value:function login(email,password){var _this2=this;return fetch(\"\".concat(this._baseUrl,\"/signin\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({email:email,password:password})}).then(function(res){return _this2._checkResponse(res);});}},{key:\"checkToken\",value:function checkToken(){var _this3=this;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:\"GET\",headers:this._headers}).then(function(res){return _this3._checkResponse(res);});}},{key:\"getMedia\",value:function getMedia(){var _this4=this;return fetch(\"\".concat(this._baseUrl,\"/media\"),{method:\"GET\",headers:this._headers}).then(function(res){return _this4._checkResponse(res);});}},{key:\"saveMedia\",value:function saveMedia(id,poster_path,release_date,media_type,title){var _this5=this;return fetch(\"\".concat(this._baseUrl,\"/media\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({id:id.toString(),poster_path:poster_path,release_date:release_date,media_type:media_type,title:title})}).then(function(res){return _this5._checkResponse(res);});}},{key:\"deleteMedia\",value:function deleteMedia(mediaId){var _this6=this;return fetch(\"\".concat(this._baseUrl,\"/media/\").concat(mediaId),{method:\"DELETE\",headers:this._headers}).then(function(res){return _this6._checkResponse(res);});}}]);return MainApi;}();var mainApi=new MainApi({baseUrl:\"http://localhost:3000\",headers:{\"Content-Type\":\"application/json\",authorization:\"\"}});export default mainApi;","map":{"version":3,"sources":["/Users/effiphil/Desktop/entertainment-web-app-full/frontend/src/utils/mainApi.js"],"names":["MainApi","baseUrl","headers","_baseUrl","_headers","res","ok","json","Promise","reject","status","token","authorization","email","password","fetch","method","body","JSON","stringify","then","_checkResponse","id","poster_path","release_date","media_type","title","toString","mediaId","mainApi"],"mappings":"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","sourcesContent":["class MainApi {\n  /** constructor of MainApi class.\n   * @param  baseUrl - the URL to make the request to.\n   */\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  updateToken(token) {\n    this._headers.authorization = `Bearer ${token}`;\n  }\n\n  register(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ email, password }),\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  login(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ email, password }),\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  checkToken() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  getMedia() {\n    return fetch(`${this._baseUrl}/media`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  saveMedia(id, poster_path, release_date, media_type, title) {\n    return fetch(`${this._baseUrl}/media`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        id: id.toString(),\n        poster_path: poster_path,\n        release_date: release_date,\n        media_type: media_type,\n        title: title,\n      }),\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n\n  deleteMedia(mediaId) {\n    return fetch(`${this._baseUrl}/media/${mediaId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkResponse(res);\n    });\n  }\n}\n\nconst mainApi = new MainApi({\n  baseUrl: \"http://localhost:3000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    authorization: \"\",\n  },\n});\n\nexport default mainApi;\n"]},"metadata":{},"sourceType":"module"}